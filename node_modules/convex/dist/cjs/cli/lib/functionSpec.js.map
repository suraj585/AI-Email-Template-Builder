{
  "version": 3,
  "sources": ["../../../../src/cli/lib/functionSpec.ts"],
  "sourcesContent": ["import chalk from \"chalk\";\nimport { logOutput } from \"../../bundler/context.js\";\nimport { runSystemQuery } from \"./run.js\";\nimport { Context } from \"../../bundler/context.js\";\n\nexport async function functionSpecForDeployment(\n  ctx: Context,\n  options: {\n    deploymentUrl: string;\n    adminKey: string;\n    file: boolean;\n  },\n) {\n  const functions = (await runSystemQuery(ctx, {\n    deploymentUrl: options.deploymentUrl,\n    adminKey: options.adminKey,\n    functionName: \"_system/cli/modules:apiSpec\",\n    componentPath: undefined,\n    args: {},\n  })) as any[];\n\n  const output = JSON.stringify(\n    { url: options.deploymentUrl, functions: functions },\n    null,\n    2,\n  );\n\n  if (options.file) {\n    const fileName = `function_spec_${Date.now().valueOf()}.json`;\n    ctx.fs.writeUtf8File(fileName, output);\n    logOutput(ctx, chalk.green(`Wrote function spec to ${fileName}`));\n  } else {\n    logOutput(ctx, output);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,qBAA0B;AAC1B,iBAA+B;AAG/B,eAAsB,0BACpB,KACA,SAKA;AACA,QAAM,YAAa,UAAM,2BAAe,KAAK;AAAA,IAC3C,eAAe,QAAQ;AAAA,IACvB,UAAU,QAAQ;AAAA,IAClB,cAAc;AAAA,IACd,eAAe;AAAA,IACf,MAAM,CAAC;AAAA,EACT,CAAC;AAED,QAAM,SAAS,KAAK;AAAA,IAClB,EAAE,KAAK,QAAQ,eAAe,UAAqB;AAAA,IACnD;AAAA,IACA;AAAA,EACF;AAEA,MAAI,QAAQ,MAAM;AAChB,UAAM,WAAW,iBAAiB,KAAK,IAAI,EAAE,QAAQ,CAAC;AACtD,QAAI,GAAG,cAAc,UAAU,MAAM;AACrC,kCAAU,KAAK,aAAAA,QAAM,MAAM,0BAA0B,QAAQ,EAAE,CAAC;AAAA,EAClE,OAAO;AACL,kCAAU,KAAK,MAAM;AAAA,EACvB;AACF;",
  "names": ["chalk"]
}
